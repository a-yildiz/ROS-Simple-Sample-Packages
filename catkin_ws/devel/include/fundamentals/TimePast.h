// Generated by gencpp from file fundamentals/TimePast.msg
// DO NOT EDIT!


#ifndef FUNDAMENTALS_MESSAGE_TIMEPAST_H
#define FUNDAMENTALS_MESSAGE_TIMEPAST_H

#include <ros/service_traits.h>


#include <fundamentals/TimePastRequest.h>
#include <fundamentals/TimePastResponse.h>


namespace fundamentals
{

struct TimePast
{

typedef TimePastRequest Request;
typedef TimePastResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TimePast
} // namespace fundamentals


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::fundamentals::TimePast > {
  static const char* value()
  {
    return "f6a073bb75b4f1328610282d59ded8da";
  }

  static const char* value(const ::fundamentals::TimePast&) { return value(); }
};

template<>
struct DataType< ::fundamentals::TimePast > {
  static const char* value()
  {
    return "fundamentals/TimePast";
  }

  static const char* value(const ::fundamentals::TimePast&) { return value(); }
};


// service_traits::MD5Sum< ::fundamentals::TimePastRequest> should match
// service_traits::MD5Sum< ::fundamentals::TimePast >
template<>
struct MD5Sum< ::fundamentals::TimePastRequest>
{
  static const char* value()
  {
    return MD5Sum< ::fundamentals::TimePast >::value();
  }
  static const char* value(const ::fundamentals::TimePastRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::fundamentals::TimePastRequest> should match
// service_traits::DataType< ::fundamentals::TimePast >
template<>
struct DataType< ::fundamentals::TimePastRequest>
{
  static const char* value()
  {
    return DataType< ::fundamentals::TimePast >::value();
  }
  static const char* value(const ::fundamentals::TimePastRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::fundamentals::TimePastResponse> should match
// service_traits::MD5Sum< ::fundamentals::TimePast >
template<>
struct MD5Sum< ::fundamentals::TimePastResponse>
{
  static const char* value()
  {
    return MD5Sum< ::fundamentals::TimePast >::value();
  }
  static const char* value(const ::fundamentals::TimePastResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::fundamentals::TimePastResponse> should match
// service_traits::DataType< ::fundamentals::TimePast >
template<>
struct DataType< ::fundamentals::TimePastResponse>
{
  static const char* value()
  {
    return DataType< ::fundamentals::TimePast >::value();
  }
  static const char* value(const ::fundamentals::TimePastResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FUNDAMENTALS_MESSAGE_TIMEPAST_H
